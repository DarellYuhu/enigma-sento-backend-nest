/* eslint-disable */
export default async () => {
    const t = {
        ["./user/entities/user.entity"]: await import("./user/entities/user.entity"),
        ["./workgroup/entities/workgroup.entity"]: await import("./workgroup/entities/workgroup.entity"),
        ["./workgroup/dto/findUsers-workgroup.dto"]: await import("./workgroup/dto/findUsers-workgroup.dto"),
        ["./workgroup/dto/findGroupDistributions-workgroup.dto"]: await import("./workgroup/dto/findGroupDistributions-workgroup.dto"),
        ["./workgroup/dto/findUserTasks-workgroup.dto"]: await import("./workgroup/dto/findUserTasks-workgroup.dto"),
        ["./workgroup/dto/addUsers-workgroup.dto"]: await import("./workgroup/dto/addUsers-workgroup.dto"),
        ["./workgroup/dto/generateUserTasks-workgroup.dto"]: await import("./workgroup/dto/generateUserTasks-workgroup.dto"),
        ["./group-distribution/dto/create-group-distribution.dto"]: await import("./group-distribution/dto/create-group-distribution.dto"),
        ["./collection/dto/create-people.dto"]: await import("./collection/dto/create-people.dto"),
        ["./project/entities/project.entity"]: await import("./project/entities/project.entity"),
        ["./story/dto/create-story.dto"]: await import("./story/dto/create-story.dto"),
        ["./story/dto/updateSection-story.dto"]: await import("./story/dto/updateSection-story.dto"),
        ["./asset/dto/add-font.dto"]: await import("./asset/dto/add-font.dto"),
        ["./asset/dto/add-rep-image.dto"]: await import("./asset/dto/add-rep-image.dto"),
        ["./asset/dto/add-video.dto"]: await import("./asset/dto/add-video.dto"),
        ["./asset/dto/add-banner.dto"]: await import("./asset/dto/add-banner.dto"),
        ["./asset/schemas/image.schema"]: await import("./asset/schemas/image.schema"),
        ["./asset/dto/add-image.dto"]: await import("./asset/dto/add-image.dto"),
        ["./asset/dto/get-music.dto"]: await import("./asset/dto/get-music.dto"),
        ["./collection/schemas/people.schema"]: await import("./collection/schemas/people.schema"),
        ["./asset/dto/get-images.dto"]: await import("./asset/dto/get-images.dto"),
        ["./proposal/dto/updateStatus-proposal.dto"]: await import("./proposal/dto/updateStatus-proposal.dto"),
        ["./auth/dto/signIn-auth.dto"]: await import("./auth/dto/signIn-auth.dto"),
        ["./user/dto/create-user.dto"]: await import("./user/dto/create-user.dto"),
        ["./user/dto/findAll-user.dto"]: await import("./user/dto/findAll-user.dto"),
        ["./workgroup/dto/create-workgroup.dto"]: await import("./workgroup/dto/create-workgroup.dto"),
        ["./workgroup/dto/findAll-workgroup.dto"]: await import("./workgroup/dto/findAll-workgroup.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./user/dto/create-user.dto"), { "CreateUserRequestDto": { displayName: { required: true, type: () => String }, username: { required: true, type: () => String }, password: { required: true, type: () => String }, role: { required: true, type: () => Object } }, "CreateUserResponseDto": { message: { required: true, type: () => String }, data: { required: true, type: () => ({ id: { required: true, type: () => String }, username: { required: true, type: () => String }, displayName: { required: true, type: () => String }, role: { required: true, type: () => Object }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } }) } } }], [import("./auth/dto/signIn-auth.dto"), { "SignInAuthRequestDto": { username: { required: true, type: () => String }, password: { required: true, type: () => String } }, "SignInAuthResponseDto": { message: { required: true, type: () => String }, data: { required: true, type: () => ({ token: { required: true, type: () => String }, user: { required: true, type: () => ({ id: { required: true, type: () => String }, displayName: { required: true, type: () => String }, role: { required: true, type: () => Object } }) } }) } } }], [import("./user/entities/user.entity"), { "User": { id: { required: true, type: () => String }, displayName: { required: true, type: () => String }, username: { required: true, type: () => String }, role: { required: true, type: () => Object }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./user/dto/findAll-user.dto"), { "FindAllUserResponseDto": { message: { required: true, type: () => String }, data: { required: true, type: () => [t["./user/entities/user.entity"].User] } } }], [import("./workgroup/entities/workgroup.entity"), { "Workgroup": { createdAt: { required: true, type: () => Date }, id: { required: true, type: () => String }, managerId: { required: true, type: () => String }, name: { required: true, type: () => String }, projectStoryPerUser: { required: true, type: () => Number }, session: { required: true, type: () => Number }, updatedAt: { required: true, type: () => Date }, withTicket: { required: true, type: () => Boolean } } }], [import("./workgroup/dto/create-workgroup.dto"), { "CreateWorkgroupRequestDto": { name: { required: true, type: () => String }, session: { required: true, type: () => Number }, projectStoryPerUser: { required: true, type: () => Number }, withTicket: { required: true, type: () => Boolean } }, "CreateWorkgroupResponseDto": { message: { required: true, type: () => String }, data: { required: true, type: () => t["./workgroup/entities/workgroup.entity"].Workgroup } } }], [import("./workgroup/dto/findAll-workgroup.dto"), { "FindAllWorkgroupResponseDto": { message: { required: true, type: () => String }, data: { required: true, type: () => [t["./workgroup/entities/workgroup.entity"].Workgroup] } } }], [import("./workgroup/dto/findUsers-workgroup.dto"), { "WorkgroupUserData": { workgroupId: { required: true, type: () => Number }, userId: { required: true, type: () => String }, username: { required: true, type: () => String }, role: { required: true, type: () => String }, displayName: { required: true, type: () => String } }, "FindUsersResponseDto": { message: { required: true, type: () => String }, data: { required: true, type: () => [t["./workgroup/dto/findUsers-workgroup.dto"].WorkgroupUserData] } } }], [import("./workgroup/dto/findGroupDistributions-workgroup.dto"), { "FindGroupDistributionsResponseDto": { message: { required: true, type: () => String }, data: { required: true, type: () => [t["./workgroup/dto/findGroupDistributions-workgroup.dto"].GroupDistribution] } }, "Project": { id: { required: true, type: () => String }, name: { required: true, type: () => String }, workgroupId: { required: true, type: () => String }, status: { required: true, type: () => Boolean }, workgroupUserId: { required: true, type: () => Number }, allocationType: { required: true, type: () => Object }, captions: { required: true, type: () => [String] }, hashtags: { required: true, type: () => String, nullable: true } }, "GroupDistribution": { projects: { required: true, type: () => [t["./workgroup/dto/findGroupDistributions-workgroup.dto"].Project] }, id: { required: true, type: () => String }, workgroupId: { required: true, type: () => String }, code: { required: true, type: () => String }, amontOfTroops: { required: true, type: () => Number } } }], [import("./workgroup/dto/findUserTasks-workgroup.dto"), { "TaskGroupDistribution": {}, "TaskUser": { workgroupUserId: { required: true, type: () => Number }, displayName: { required: true, type: () => String }, distributions: { required: true, type: () => [t["./workgroup/dto/findUserTasks-workgroup.dto"].TaskGroupDistribution] } }, "TaskData": { users: { required: true, type: () => [t["./workgroup/dto/findUserTasks-workgroup.dto"].TaskUser] }, id: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, workgroupId: { required: true, type: () => String } }, "FindUserTasksResponseDto": { message: { required: true, type: () => String }, data: { required: true, type: () => [t["./workgroup/dto/findUserTasks-workgroup.dto"].TaskData] } } }], [import("./workgroup/dto/addUsers-workgroup.dto"), { "AddUsersRequestDto": { users: { required: true, type: () => [String], minItems: 1 } }, "WorkgroupUser": { id: { required: true, type: () => Number }, userId: { required: true, type: () => String }, workgroupId: { required: true, type: () => String }, isDeleted: { required: true, type: () => Boolean } }, "AddUsersResponseDto": { message: { required: true, type: () => String }, data: { required: true, type: () => [t["./workgroup/dto/addUsers-workgroup.dto"].WorkgroupUser] } } }], [import("./workgroup/dto/generateUserTasks-workgroup.dto"), { "UserTask": { id: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, workgroupId: { required: true, type: () => String } }, "GenerateUserTasksResponseDto": { message: { required: true, type: () => String }, data: { required: true, type: () => t["./workgroup/dto/generateUserTasks-workgroup.dto"].UserTask } } }], [import("./group-distribution/entities/group-distribution.entity"), { "GroupDistribution": { workgroupId: { required: true, type: () => String }, amontOfTroops: { required: true, type: () => Number }, isDeleted: { required: true, type: () => Boolean }, code: { required: true, type: () => String }, id: { required: true, type: () => String } } }], [import("./group-distribution/dto/create-group-distribution.dto"), { "CreateGroupDistributionDto": { file: { required: true, type: () => Object } }, "GS": { amontOfTroops: { required: true, type: () => Number }, code: { required: true, type: () => String } }, "XlsxFileSchema": { data: { required: true, type: () => [t["./group-distribution/dto/create-group-distribution.dto"].GS] } } }], [import("./group-distribution/dto/download-group-distribution.dto"), { "DownloadGroupDistributionDto": { projectIds: { required: true, type: () => [String], minItems: 1 } } }], [import("./collection/dto/create-collection.dto"), { "CreateCollectionDto": { name: { required: true, type: () => String }, type: { required: true, type: () => Object }, assets: { required: false, type: () => [String] } } }], [import("./collection/dto/update-collection.dto"), { "UpdateCollectionDto": { deletedAssets: { required: false, type: () => [String] }, newAssets: { required: false, type: () => [String] } } }], [import("./collection/dto/create-people.dto"), { "CreatePeopleData": { name: { required: true, type: () => String } }, "CreatePeopleDto": { data: { required: true, type: () => [t["./collection/dto/create-people.dto"].CreatePeopleData] } } }], [import("./project/entities/project.entity"), { "Project": { allocationType: { required: true, type: () => Object }, captions: { required: true, type: () => [String] }, hashtags: { required: true, type: () => String }, id: { required: true, type: () => String }, name: { required: true, type: () => String }, status: { required: true, type: () => Boolean }, workgroupId: { required: true, type: () => String }, workgroupUserId: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./project/dto/create-project.dto"), { "CreateProjectRequestDto": { name: { required: true, type: () => String }, captions: { required: false, type: () => String }, hashtags: { required: false, type: () => String, nullable: true }, allocationType: { required: true, type: () => Object }, workgroupId: { required: true, type: () => String }, proposalId: { required: false, type: () => String } }, "CreateProjectResponseDto": { message: { required: true, type: () => String }, data: { required: true, type: () => t["./project/entities/project.entity"].Project } } }], [import("./project/dto/update-project.dto"), { "UpdateProjectDto": {} }], [import("./story/dto/create-story.dto"), { "ImageData": { path: { required: true, type: () => String }, name: { required: true, type: () => String } }, "SectionData": { texts: { required: true, type: () => [String] }, textColor: { required: true, type: () => String }, textBgColor: { required: true, type: () => String }, textStroke: { required: true, type: () => String }, imageType: { required: true, type: () => Object }, textPosition: { required: true, type: () => Object }, images: { required: true, type: () => [t["./story/dto/create-story.dto"].ImageData] } }, "CreateStoryDto": { data: { required: true, type: () => [t["./story/dto/create-story.dto"].SectionData] }, type: { required: true, type: () => [Object] }, projectId: { required: true, type: () => String }, section: { required: true, type: () => Number } } }], [import("./story/dto/updateSection-story.dto"), { "NewImage": { path: { required: true, type: () => String }, name: { required: true, type: () => String } }, "DeletedImage": { _id: { required: true, type: () => String } }, "UpdateSectionRequestDto": { newImages: { required: true, type: () => [t["./story/dto/updateSection-story.dto"].NewImage] }, deletedImages: { required: true, type: () => [t["./story/dto/updateSection-story.dto"].DeletedImage] } } }], [import("./asset/dto/add-font.dto"), { "FontRequestData": { name: { required: true, type: () => String }, path: { required: true, type: () => String } }, "AddFontRequestDto": { data: { required: true, type: () => [t["./asset/dto/add-font.dto"].FontRequestData] } } }], [import("./asset/dto/add-rep-image.dto"), { "ImageData": { name: { required: true, type: () => String }, path: { required: true, type: () => String } }, "AddRepImageRequestDto": { data: { required: true, type: () => [t["./asset/dto/add-rep-image.dto"].ImageData] } } }], [import("./asset/dto/add-video.dto"), { "VideoData": { name: { required: true, type: () => String }, path: { required: true, type: () => String } }, "AddVideoRequestDto": { data: { required: true, type: () => [t["./asset/dto/add-video.dto"].VideoData] } } }], [import("./asset/dto/add-banner.dto"), { "BannerData": { name: { required: true, type: () => String }, path: { required: true, type: () => String } }, "AddBannerRequestDto": { data: { required: true, type: () => [t["./asset/dto/add-banner.dto"].BannerData] } } }], [import("./asset/dto/add-image.dto"), { "ImageData": { name: { required: true, type: () => String }, path: { required: true, type: () => String }, description: { required: true, type: () => String }, tags: { required: true, type: () => [String] }, people: { required: true, type: () => [String] }, location: { required: true, type: () => t["./asset/schemas/image.schema"].Location } }, "AddImageRequestDto": { data: { required: true, type: () => [t["./asset/dto/add-image.dto"].ImageData] } } }], [import("./story/dto/add-generated-content.dto"), { "AddGeneratedContentDto": { files: { required: true, type: () => [String] } } }], [import("./asset/dto/get-music.dto"), { "Music": { path: { required: true, type: () => String }, title: { required: true, type: () => String }, type: { required: true, type: () => String }, size: { required: true, type: () => Number }, duration: { required: true, type: () => Number }, album: { required: false, type: () => String }, artist: { required: false, type: () => String }, year: { required: false, type: () => String }, _id: { required: true, type: () => require("mongoose").Types.ObjectId }, __v: { required: true, type: () => Number } }, "GetAllMusicResponseDto": { message: { required: true, type: () => String }, data: { required: true, type: () => [t["./asset/dto/get-music.dto"].Music] } } }], [import("./asset/dto/get-images.dto"), { "ImagesData": { people: { required: true, type: () => [t["./collection/schemas/people.schema"].People] } }, "GetImagesDto": { message: { required: true, type: () => String }, data: { required: true, type: () => [t["./asset/dto/get-images.dto"].ImagesData] } } }], [import("./proposal/dto/create-proposal.dto"), { "CreateProposalDto": { title: { required: true, type: () => String }, workgroupId: { required: true, type: () => String }, fileName: { required: true, type: () => String }, filePath: { required: true, type: () => String } } }], [import("./proposal/dto/updateStatus-proposal.dto"), { "Feedback": { message: { required: true, type: () => String }, filePath: { required: true, type: () => String }, fileName: { required: true, type: () => String } }, "UpdateProposalStatusDto": { status: { required: true, enum: t["./proposal/dto/updateStatus-proposal.dto"].StatusWithoutWaiting }, feedback: { required: false, type: () => t["./proposal/dto/updateStatus-proposal.dto"].Feedback } } }], [import("./proposal/dto/create-submission.dto"), { "CreateSubmissionDto": {} }], [import("./layout/dto/upsert-layout.dto"), { "UpsertLayoutDto": {} }], [import("./layout-group/dto/create-layout-group.dto"), { "CreateLayoutGroupDto": { name: { required: true, type: () => String }, description: { required: false, type: () => String }, layoutIds: { required: true, type: () => [Number] } } }], [import("./folder/dto/create-folder.dto"), { "CreateFolderDto": { name: { required: true, type: () => String } } }], [import("./folder/dto/download-groups.dto"), { "DownloadGroupsDto": {} }], [import("./bundle/dto/update-bundle.dto"), { "UpdateBundleDto": { notes: { required: false, type: () => String } } }], [import("./proposal/dto/update-proposal.dto"), { "UpdateProposalDto": {} }], [import("./storage/dto/create-storage.dto"), { "CreateStorageDto": {} }], [import("./storage/dto/update-storage.dto"), { "UpdateStorageDto": {} }], [import("./storage/entities/storage.entity"), { "Storage": {} }], [import("./story/entities/story.entity"), { "Story": {} }]], "controllers": [[import("./app.controller"), { "AppController": { "getHello": { summary: "Welcome message" } } }], [import("./auth/auth.controller"), { "AuthController": { "signIn": { summary: "Sign in", type: t["./auth/dto/signIn-auth.dto"].SignInAuthResponseDto } } }], [import("./user/user.controller"), { "UserController": { "create": { summary: "Create new user", type: t["./user/dto/create-user.dto"].CreateUserResponseDto }, "findAll": { summary: "Get all users", type: t["./user/dto/findAll-user.dto"].FindAllUserResponseDto } } }], [import("./workgroup/workgroup.controller"), { "WorkgroupController": { "create": { type: t["./workgroup/dto/create-workgroup.dto"].CreateWorkgroupResponseDto }, "findAll": { type: t["./workgroup/dto/findAll-workgroup.dto"].FindAllWorkgroupResponseDto }, "findById": {}, "findUsers": { type: t["./workgroup/dto/findUsers-workgroup.dto"].FindUsersResponseDto }, "addUsers": { type: t["./workgroup/dto/addUsers-workgroup.dto"].AddUsersResponseDto }, "deleteUser": {}, "findGroupDistributions": { type: t["./workgroup/dto/findGroupDistributions-workgroup.dto"].FindGroupDistributionsResponseDto }, "generateUserTasks": { type: t["./workgroup/dto/generateUserTasks-workgroup.dto"].GenerateUserTasksResponseDto }, "findUserTasks": { type: t["./workgroup/dto/findUserTasks-workgroup.dto"].FindUserTasksResponseDto } } }], [import("./group-distribution/group-distribution.controller"), { "GroupDistributionController": { "create": {}, "remove": {}, "downloadContents": {} } }], [import("./collection/collection.controller"), { "CollectionController": { "create": {}, "createPeople": {}, "findPeople": {}, "findAll": {}, "findOne": {}, "update": {}, "remove": { type: String } } }], [import("./project/project.controller"), { "ProjectController": { "create": {}, "findByWorkgroupId": {}, "generateDistribution": {}, "findOne": { type: String }, "update": {}, "remove": { type: String } } }], [import("./story/story.controller"), { "StoryController": { "create": {}, "remove": {}, "update": { type: Object }, "generate": {}, "addGeneratedContent": { type: Object }, "addContentWithSection": {}, "updateSection": { type: Object } } }], [import("./asset/asset.controller"), { "AssetController": { "addMusics": {}, "findAllMusic": { type: t["./asset/dto/get-music.dto"].GetAllMusicResponseDto }, "addFonts": {}, "findAllFont": {}, "getFontById": {}, "deleteFont": {}, "findAllColor": {}, "addColors": {}, "getColorById": {}, "addImages": {}, "getImages": { type: t["./asset/dto/get-images.dto"].GetImagesDto }, "getImageById": {}, "addRepImages": {}, "getRepImages": {}, "addVideos": {}, "getVideos": {}, "addBanners": {}, "getBanners": {} } }], [import("./storage/storage.controller"), { "StorageController": { "getUploadUrl": {}, "cleanupStorage": {} } }], [import("./task/task.controller"), { "TaskController": { "exportTaskDistribution": {} } }], [import("./proposal/proposal.controller"), { "ProposalController": { "create": {}, "findAll": {}, "findOne": {}, "createSubmission": {}, "updateProposalStatus": {} } }], [import("./layout/layout.controller"), { "LayoutController": { "create": {}, "getOne": {}, "update": {}, "delete": {}, "generateImage": {} } }], [import("./layout-group/layout-group.controller"), { "LayoutGroupController": { "create": {}, "findAll": {}, "generateContent": {}, "getVariableFields": { type: [Object] } } }], [import("./folder/folder.controller"), { "FolderController": { "create": {}, "findAll": {}, "delete": {}, "getGeneratedGroups": {}, "downloadGroup": { type: String } } }], [import("./bundle/bundle.controller"), { "BundleController": { "groupAndDownload": {}, "findById": {}, "update": {} } }]] } };
};